From 3f744671268beb72623130e6c16231ce5c1bd9ff Mon Sep 17 00:00:00 2001
From: Jacob Pfeifer <jacob@pfeifer.dev>
Date: Thu, 23 May 2024 17:55:57 -0400
Subject: [PATCH] Ford Steering Data Radar

---
 selfdrive/car/ford/radar_interface.py | 51 +++++++++++++++++++++++++++
 selfdrive/car/ford/values.py          | 13 +++++--
 2 files changed, 62 insertions(+), 2 deletions(-)

diff --git a/selfdrive/car/ford/radar_interface.py b/selfdrive/car/ford/radar_interface.py
index 209bbebae..d37d3b67e 100644
--- a/selfdrive/car/ford/radar_interface.py
+++ b/selfdrive/car/ford/radar_interface.py
@@ -11,6 +11,11 @@ DELPHI_ESR_RADAR_MSGS = list(range(0x500, 0x540))
 DELPHI_MRR_RADAR_START_ADDR = 0x120
 DELPHI_MRR_RADAR_MSG_COUNT = 64
 
+# PFEIFER - FSDR {{
+# Code is directly copied from @incognitojam's branch. https://github.com/commaai/openpilot/compare/master...incognitojam:openpilot:ford-radar-camera
+MSG_STEER_ASSIST_DATA = 0x3D7
+# }} PFEIFER - FSDR
+
 
 def _create_delphi_esr_radar_can_parser(CP) -> CANParser:
   msg_n = len(DELPHI_ESR_RADAR_MSGS)
@@ -28,6 +33,12 @@ def _create_delphi_mrr_radar_can_parser(CP) -> CANParser:
 
   return CANParser(RADAR.DELPHI_MRR, messages, CanBus(CP).radar)
 
+# PFEIFER - FSDR {{
+def _create_camera_can_parser(CP) -> CANParser:
+  messages = [(MSG_STEER_ASSIST_DATA, 20)]
+  return CANParser(RADAR.CAMERA, messages, CanBus(CP).camera)
+# }} PFEIFER - FSDR
+
 
 class RadarInterface(RadarInterfaceBase):
   def __init__(self, CP):
@@ -45,6 +56,11 @@ class RadarInterface(RadarInterfaceBase):
     elif self.radar == RADAR.DELPHI_MRR:
       self.rcp = _create_delphi_mrr_radar_can_parser(CP)
       self.trigger_msg = DELPHI_MRR_RADAR_START_ADDR + DELPHI_MRR_RADAR_MSG_COUNT - 1
+    # PFEIFER - FSDR {{
+    elif self.radar == RADAR.CAMERA:
+      self.rcp = _create_camera_can_parser(CP)
+      self.trigger_msg = MSG_STEER_ASSIST_DATA
+    # }} PFEIFER - FSDR
     else:
       raise ValueError(f"Unsupported radar: {self.radar}")
 
@@ -68,6 +84,10 @@ class RadarInterface(RadarInterfaceBase):
       self._update_delphi_esr()
     elif self.radar == RADAR.DELPHI_MRR:
       self._update_delphi_mrr()
+    # PFEIFER - FSDR {{
+    elif self.radar == RADAR.CAMERA:
+      self._update_camera()
+    # }} PFEIFER - FSDR
 
     ret.points = list(self.pts.values())
     self.updated_messages.clear()
@@ -141,3 +161,34 @@ class RadarInterface(RadarInterfaceBase):
 
       else:
         del self.pts[i]
+
+  # PFEIFER - FSDR {{
+  def _update_camera(self):
+    msg = self.rcp.vl["Steer_Assist_Data"]
+
+    if msg["CmbbObjConfdnc_D_Stat"] > 0:
+      dRel = msg["CmbbObjDistLong_L_Actl"]
+      vRel = msg["CmbbObjRelLong_V_Actl"]
+
+      # camera doesn't notify of track switches, so do it manually
+      # TODO: refactor this to radard if more radars behave this way
+      pt = self.pts.get(0)
+      if pt and (abs(pt.vRel - vRel) > 2 or abs(pt.dRel - dRel) > 5):
+        self.track_id += 1
+        pt.trackId = self.track_id
+
+      if pt is None:
+        pt = car.RadarData.RadarPoint.new_message()
+        pt.trackId = self.track_id
+        self.pts[0] = pt
+
+      pt.dRel = dRel
+      pt.yRel = msg["CmbbObjDistLat_L_Actl"]
+      pt.vRel = vRel
+      pt.yvRel = msg["CmbbObjRelLat_V_Actl"]
+      pt.measured = True
+
+    elif 0 in self.pts:
+      del self.pts[0]
+      self.track_id += 1
+  # }} PFEIFER - FSDR
diff --git a/selfdrive/car/ford/values.py b/selfdrive/car/ford/values.py
index b1868bfa9..ac9c6d181 100644
--- a/selfdrive/car/ford/values.py
+++ b/selfdrive/car/ford/values.py
@@ -49,6 +49,9 @@ class FordFlags(IntFlag):
 class RADAR:
   DELPHI_ESR = 'ford_fusion_2018_adas'
   DELPHI_MRR = 'FORD_CADS'
+  # PFEIFER - FSDR {{
+  CAMERA = 'ford_lincoln_base_pt'
+  # }} PFEIFER - FSDR
 
 
 class Footnote(Enum):
@@ -75,7 +78,10 @@ class FordCarDocs(CarDocs):
 
 @dataclass
 class FordPlatformConfig(PlatformConfig):
-  dbc_dict: DbcDict = field(default_factory=lambda: dbc_dict('ford_lincoln_base_pt', RADAR.DELPHI_MRR))
+  # dbc_dict: DbcDict = field(default_factory=lambda: dbc_dict('ford_lincoln_base_pt', RADAR.DELPHI_MRR))
+  # PFEIFER - FSDR {{
+  dbc_dict: DbcDict = field(default_factory=lambda: dbc_dict('ford_lincoln_base_pt', RADAR.CAMERA))
+  # }} PFEIFER - FSDR
 
   def init(self):
     for car_docs in list(self.car_docs):
@@ -89,7 +95,10 @@ class FordPlatformConfig(PlatformConfig):
 
 @dataclass
 class FordCANFDPlatformConfig(FordPlatformConfig):
-  dbc_dict: DbcDict = field(default_factory=lambda: dbc_dict('ford_lincoln_base_pt', None))
+  # dbc_dict: DbcDict = field(default_factory=lambda: dbc_dict('ford_lincoln_base_pt', None))
+  # PFEIFER - FSDR {{
+  dbc_dict: DbcDict = field(default_factory=lambda: dbc_dict('ford_lincoln_base_pt', RADAR.CAMERA))
+  # }} PFEIFER - FSDR
 
   def init(self):
     super().init()
-- 
2.39.2

