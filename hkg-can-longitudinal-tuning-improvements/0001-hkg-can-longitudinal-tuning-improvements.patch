From 7acbf630730f63e12482ad55a9c3193f733faf26 Mon Sep 17 00:00:00 2001
From: Jacob Pfeifer <jacob@pfeifer.dev>
Date: Fri, 29 Mar 2024 21:45:09 -0400
Subject: [PATCH] hkg-can longitudinal tuning improvements

---
 selfdrive/car/hyundai/carcontroller.py | 15 ++++++++++++---
 selfdrive/car/hyundai/hyundaican.py    |  6 +++---
 selfdrive/car/hyundai/interface.py     |  9 +++++++--
 3 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/selfdrive/car/hyundai/carcontroller.py b/selfdrive/car/hyundai/carcontroller.py
index 7829d764b..dfd79e9c5 100644
--- a/selfdrive/car/hyundai/carcontroller.py
+++ b/selfdrive/car/hyundai/carcontroller.py
@@ -144,12 +144,21 @@ class CarController(CarControllerBase):
         can_sends.extend(self.create_button_messages(CC, CS, use_clu11=True))
 
       if self.frame % 2 == 0 and self.CP.openpilotLongitudinalControl:
-        # TODO: unclear if this is needed
-        jerk = 3.0 if actuators.longControlState == LongCtrlState.pid else 1.0
+        required_jerk = min(3, abs(accel - CS.out.aEgo) * 50)
+        # calculate jerk from plan, give a small offset for the upper limit for the cars ecu
+        lower_jerk = required_jerk
+        upper_jerk = required_jerk
+
+        if CS.out.aEgo < accel:
+          lower_jerk = 0
+        else:
+          upper_jerk = 0
+
         use_fca = self.CP.flags & HyundaiFlags.USE_FCA.value
-        can_sends.extend(hyundaican.create_acc_commands(self.packer, CC.enabled, accel, jerk, int(self.frame / 2),
+        can_sends.extend(hyundaican.create_acc_commands(self.packer, CC.enabled, accel, upper_jerk, lower_jerk, int(self.frame / 2),
                                                         hud_control, set_speed_in_units, stopping,
                                                         CC.cruiseControl.override, use_fca))
+        self.accel_last = accel
 
       # 20 Hz LFA MFA message
       if self.frame % 5 == 0 and self.CP.flags & HyundaiFlags.SEND_LFA.value:
diff --git a/selfdrive/car/hyundai/hyundaican.py b/selfdrive/car/hyundai/hyundaican.py
index b4b951f89..a2690691d 100644
--- a/selfdrive/car/hyundai/hyundaican.py
+++ b/selfdrive/car/hyundai/hyundaican.py
@@ -126,7 +126,7 @@ def create_lfahda_mfc(packer, enabled, hda_set_speed=0):
   }
   return packer.make_can_msg("LFAHDA_MFC", 0, values)
 
-def create_acc_commands(packer, enabled, accel, upper_jerk, idx, hud_control, set_speed, stopping, long_override, use_fca):
+def create_acc_commands(packer, enabled, accel, upper_jerk, lower_jerk, idx, hud_control, set_speed, stopping, long_override, use_fca):
   commands = []
 
   scc11_values = {
@@ -164,8 +164,8 @@ def create_acc_commands(packer, enabled, accel, upper_jerk, idx, hud_control, se
   scc14_values = {
     "ComfortBandUpper": 0.0, # stock usually is 0 but sometimes uses higher values
     "ComfortBandLower": 0.0, # stock usually is 0 but sometimes uses higher values
-    "JerkUpperLimit": upper_jerk, # stock usually is 1.0 but sometimes uses higher values
-    "JerkLowerLimit": 5.0, # stock usually is 0.5 but sometimes uses higher values
+    "JerkUpperLimit": min(3.0, upper_jerk), # stock usually is 1.0 but sometimes uses higher values
+    "JerkLowerLimit": max(0.05, lower_jerk), # stock usually is 0.5 but sometimes uses higher values
     "ACCMode": 2 if enabled and long_override else 1 if enabled else 4, # stock will always be 4 instead of 0 after first disengage
     "ObjGap": 2 if hud_control.leadVisible else 0, # 5: >30, m, 4: 25-30 m, 3: 20-25 m, 2: < 20 m, 0: no lead
   }
diff --git a/selfdrive/car/hyundai/interface.py b/selfdrive/car/hyundai/interface.py
index 00452a9ae..9946dac34 100644
--- a/selfdrive/car/hyundai/interface.py
+++ b/selfdrive/car/hyundai/interface.py
@@ -81,9 +81,14 @@ class CarInterface(CarInterfaceBase):
       ret.longitudinalTuning.kiV = [0.0]
       ret.experimentalLongitudinalAvailable = candidate not in (CANFD_UNSUPPORTED_LONGITUDINAL_CAR | CANFD_RADAR_SCC_CAR)
     else:
-      ret.longitudinalTuning.kpV = [0.5]
-      ret.longitudinalTuning.kiV = [0.0]
+      ret.longitudinalTuning.kpBP = [2.0, 7.0]
+      ret.longitudinalTuning.kpV = [0.4, 0.9]
+
+      ret.longitudinalTuning.kiBP = [2.0, 7.0]
+      ret.longitudinalTuning.kiV = [0.0, 0.15]
+
       ret.experimentalLongitudinalAvailable = candidate not in (UNSUPPORTED_LONGITUDINAL_CAR | CAMERA_SCC_CAR)
+
     ret.openpilotLongitudinalControl = experimental_long and ret.experimentalLongitudinalAvailable
     ret.pcmCruise = not ret.openpilotLongitudinalControl
 
-- 
2.39.2

